# -*- coding: utf-8 -*-

import math

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

print("=== 1 ===")

list = [2, -5, 8, 9, -25, 25, 4]
result = []

for el in list:
  if el >= 0:
    sqrt = math.sqrt(el)
    if sqrt == int(sqrt):
      result.append(int(sqrt))

print(result)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print("\n=== 2 ===")

date = "02.11.2013"
dates = ("1-е", "2-е", "3-е", "4-е", "5-е", "6-е", "7-е", "8-е", "9-е", "10-е", "11-е", "12-е", "13-е", "14-е", "15-е", "16-е", "17-е", "18-е", "19-е", "20-е", "21-е", "22-е", "23-е", "24-е", "25-е", "26-е", "27-е", "28-е", "29-е", "30-е", "31-е")
months = ("января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря")

firstDot = date.find('.')
secondDot = date.find('.', firstDot + 1)
thirdDot = date.find('.', secondDot + 1)

if thirdDot == -1:
  thirdDot = len(date) + 1

firstStr = date[0 : firstDot]
secondStr = date[firstDot + 1 : secondDot]
thirdStr = date[secondDot + 1 : thirdDot]

date = int(firstStr.strip("0")) - 1
month = int(secondStr.strip("0")) - 1
year = int(thirdStr)

print("%s %s %d года." % (dates[date], months[month], year))


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random

print("\n=== 3 ===")

n = 10
list = []
for i in range(0, n):
  list.append(random.randint(-100, 100))
print(list)


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print("\n=== 4 ===")
